#!/usr/bin/env node

var path = require("path");
var fs = require("fs");
var acorn = require("../acorn.js");

<<<<<<< HEAD
var infile, parsed, tokens, options = {}, silent = false, compact = false, tokenize = false;
=======
var infile, parsed, options = {}, silent = false, compact = false;
>>>>>>> initial express/node/pg install

function help(status) {
  var print = (status == 0) ? console.log : console.error;
  print("usage: " + path.basename(process.argv[1]) + " [--ecma3|--ecma5|--ecma6] [--strictSemicolons]");
<<<<<<< HEAD
  print("        [--tokenize] [--locations] [--compact] [--silent] [--help] [--] infile");
=======
  print("        [--locations] [--compact] [--silent] [--help] [--] infile");
>>>>>>> initial express/node/pg install
  process.exit(status);
}

for (var i = 2; i < process.argv.length; ++i) {
  var arg = process.argv[i];
  if (arg[0] != "-" && !infile) infile = arg;
  else if (arg == "--" && !infile && i + 2 == process.argv.length) infile = process.argv[++i];
  else if (arg == "--ecma3") options.ecmaVersion = 3;
  else if (arg == "--ecma5") options.ecmaVersion = 5;
  else if (arg == "--ecma6") options.ecmaVersion = 6;
<<<<<<< HEAD
  else if (arg == "--ecma7") options.ecmaVersion = 7;
=======
>>>>>>> initial express/node/pg install
  else if (arg == "--strictSemicolons") options.strictSemicolons = true;
  else if (arg == "--locations") options.locations = true;
  else if (arg == "--silent") silent = true;
  else if (arg == "--compact") compact = true;
  else if (arg == "--help") help(0);
<<<<<<< HEAD
  else if (arg == "--tokenize") tokenize = true;
=======
>>>>>>> initial express/node/pg install
  else help(1);
}

try {
  var code = fs.readFileSync(infile, "utf8");
<<<<<<< HEAD

  if (!tokenize)
    parsed = acorn.parse(code, options);
  else {
    var get = acorn.tokenize(code, options);
    tokens = [];
    while (true) {
      var token = get();
      tokens.push(token);
      if (token.type.type == "eof")
        break;
    }
  }
=======
  parsed = acorn.parse(code, options);
>>>>>>> initial express/node/pg install
} catch(e) {
  console.log(e.message);
  process.exit(1);
}

if (!silent)
<<<<<<< HEAD
  console.log(JSON.stringify(tokenize ? tokens : parsed, null, compact ? null : 2));
=======
  console.log(JSON.stringify(parsed, null, compact ? null : 2));
>>>>>>> initial express/node/pg install
